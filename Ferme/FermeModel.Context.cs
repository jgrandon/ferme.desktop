//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ferme
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FermeEntities : DbContext
    {
        public FermeEntities()
            : base("name=FermeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<USERS> USERS { get; set; }
        public virtual DbSet<FAMILIA_PRODUCTO> FAMILIA_PRODUCTO { get; set; }
        public virtual DbSet<PRODUCTO> PRODUCTO { get; set; }
        public virtual DbSet<PROVEEDOR> PROVEEDOR { get; set; }
        public virtual DbSet<TIPO_PRODUCTO> TIPO_PRODUCTO { get; set; }
    
        public virtual int LISTPERSONAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LISTPERSONAS");
        }
    
        public virtual int INSERTARPRO(string iD_PRO, string nOMBRE_PRO, string dESCRIPCION_PRO, Nullable<decimal> pRECIO_PRO, string iDTIPOS_PRODUCTO, string iDFAMILIAS_PRODUCTO, string iDPROVEDORE)
        {
            var iD_PROParameter = iD_PRO != null ?
                new ObjectParameter("ID_PRO", iD_PRO) :
                new ObjectParameter("ID_PRO", typeof(string));
    
            var nOMBRE_PROParameter = nOMBRE_PRO != null ?
                new ObjectParameter("NOMBRE_PRO", nOMBRE_PRO) :
                new ObjectParameter("NOMBRE_PRO", typeof(string));
    
            var dESCRIPCION_PROParameter = dESCRIPCION_PRO != null ?
                new ObjectParameter("DESCRIPCION_PRO", dESCRIPCION_PRO) :
                new ObjectParameter("DESCRIPCION_PRO", typeof(string));
    
            var pRECIO_PROParameter = pRECIO_PRO.HasValue ?
                new ObjectParameter("PRECIO_PRO", pRECIO_PRO) :
                new ObjectParameter("PRECIO_PRO", typeof(decimal));
    
            var iDTIPOS_PRODUCTOParameter = iDTIPOS_PRODUCTO != null ?
                new ObjectParameter("IDTIPOS_PRODUCTO", iDTIPOS_PRODUCTO) :
                new ObjectParameter("IDTIPOS_PRODUCTO", typeof(string));
    
            var iDFAMILIAS_PRODUCTOParameter = iDFAMILIAS_PRODUCTO != null ?
                new ObjectParameter("IDFAMILIAS_PRODUCTO", iDFAMILIAS_PRODUCTO) :
                new ObjectParameter("IDFAMILIAS_PRODUCTO", typeof(string));
    
            var iDPROVEDOREParameter = iDPROVEDORE != null ?
                new ObjectParameter("IDPROVEDORE", iDPROVEDORE) :
                new ObjectParameter("IDPROVEDORE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTARPRO", iD_PROParameter, nOMBRE_PROParameter, dESCRIPCION_PROParameter, pRECIO_PROParameter, iDTIPOS_PRODUCTOParameter, iDFAMILIAS_PRODUCTOParameter, iDPROVEDOREParameter);
        }
    
        public virtual int LISTPRODUCTOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LISTPRODUCTOS");
        }
    
        public virtual int ACTUALIZARPRO(string iD, string nOMBRE, string dESCRIPCION, Nullable<decimal> pRECIO, string iDTIPO_PRODUCTO, string iDFAMILIA_PRODUCTO, string iDPROVEEDOR)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var pRECIOParameter = pRECIO.HasValue ?
                new ObjectParameter("PRECIO", pRECIO) :
                new ObjectParameter("PRECIO", typeof(decimal));
    
            var iDTIPO_PRODUCTOParameter = iDTIPO_PRODUCTO != null ?
                new ObjectParameter("IDTIPO_PRODUCTO", iDTIPO_PRODUCTO) :
                new ObjectParameter("IDTIPO_PRODUCTO", typeof(string));
    
            var iDFAMILIA_PRODUCTOParameter = iDFAMILIA_PRODUCTO != null ?
                new ObjectParameter("IDFAMILIA_PRODUCTO", iDFAMILIA_PRODUCTO) :
                new ObjectParameter("IDFAMILIA_PRODUCTO", typeof(string));
    
            var iDPROVEEDORParameter = iDPROVEEDOR != null ?
                new ObjectParameter("IDPROVEEDOR", iDPROVEEDOR) :
                new ObjectParameter("IDPROVEEDOR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ACTUALIZARPRO", iDParameter, nOMBREParameter, dESCRIPCIONParameter, pRECIOParameter, iDTIPO_PRODUCTOParameter, iDFAMILIA_PRODUCTOParameter, iDPROVEEDORParameter);
        }
    
        public virtual int ELIMINARPRO(string iDP)
        {
            var iDPParameter = iDP != null ?
                new ObjectParameter("IDP", iDP) :
                new ObjectParameter("IDP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELIMINARPRO", iDPParameter);
        }
    }
}
