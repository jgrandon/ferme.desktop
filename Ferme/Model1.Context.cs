//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ferme
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BOLETAS> BOLETAS { get; set; }
        public virtual DbSet<BOLETAS_DETALLE> BOLETAS_DETALLE { get; set; }
        public virtual DbSet<CLIENTES> CLIENTES { get; set; }
        public virtual DbSet<FAILED_JOBS> FAILED_JOBS { get; set; }
        public virtual DbSet<FAMILIAS_PRODUCTO> FAMILIAS_PRODUCTO { get; set; }
        public virtual DbSet<MIGRATIONS> MIGRATIONS { get; set; }
        public virtual DbSet<ORDENES_COMPRA> ORDENES_COMPRA { get; set; }
        public virtual DbSet<ORDENES_COMPRA_DETALLE> ORDENES_COMPRA_DETALLE { get; set; }
        public virtual DbSet<PRODUCTO_FAVORITOS> PRODUCTO_FAVORITOS { get; set; }
        public virtual DbSet<PRODUCTO_IMAGENES> PRODUCTO_IMAGENES { get; set; }
        public virtual DbSet<PRODUCTOS> PRODUCTOS { get; set; }
        public virtual DbSet<PROVEEDORES> PROVEEDORES { get; set; }
        public virtual DbSet<REGISTROS_STOCK> REGISTROS_STOCK { get; set; }
        public virtual DbSet<TIPOS_PRODUCTO> TIPOS_PRODUCTO { get; set; }
        public virtual DbSet<TRABAJADORES> TRABAJADORES { get; set; }
        public virtual DbSet<USERS> USERS { get; set; }
        public virtual DbSet<PASSWORD_RESETS> PASSWORD_RESETS { get; set; }
    
        public virtual int ELIMINARPRO(string iDP)
        {
            var iDPParameter = iDP != null ?
                new ObjectParameter("IDP", iDP) :
                new ObjectParameter("IDP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELIMINARPRO", iDPParameter);
        }
    
        public virtual int INSERTARPRO(string iD_PRO, string nOMBRE_PRO, string dESCRIPCION_PRO, Nullable<decimal> pRECIO_PRO, string iDTIPOS_PRODUCTO, string iDFAMILIAS_PRODUCTO, string iDPROVEDORE)
        {
            var iD_PROParameter = iD_PRO != null ?
                new ObjectParameter("ID_PRO", iD_PRO) :
                new ObjectParameter("ID_PRO", typeof(string));
    
            var nOMBRE_PROParameter = nOMBRE_PRO != null ?
                new ObjectParameter("NOMBRE_PRO", nOMBRE_PRO) :
                new ObjectParameter("NOMBRE_PRO", typeof(string));
    
            var dESCRIPCION_PROParameter = dESCRIPCION_PRO != null ?
                new ObjectParameter("DESCRIPCION_PRO", dESCRIPCION_PRO) :
                new ObjectParameter("DESCRIPCION_PRO", typeof(string));
    
            var pRECIO_PROParameter = pRECIO_PRO.HasValue ?
                new ObjectParameter("PRECIO_PRO", pRECIO_PRO) :
                new ObjectParameter("PRECIO_PRO", typeof(decimal));
    
            var iDTIPOS_PRODUCTOParameter = iDTIPOS_PRODUCTO != null ?
                new ObjectParameter("IDTIPOS_PRODUCTO", iDTIPOS_PRODUCTO) :
                new ObjectParameter("IDTIPOS_PRODUCTO", typeof(string));
    
            var iDFAMILIAS_PRODUCTOParameter = iDFAMILIAS_PRODUCTO != null ?
                new ObjectParameter("IDFAMILIAS_PRODUCTO", iDFAMILIAS_PRODUCTO) :
                new ObjectParameter("IDFAMILIAS_PRODUCTO", typeof(string));
    
            var iDPROVEDOREParameter = iDPROVEDORE != null ?
                new ObjectParameter("IDPROVEDORE", iDPROVEDORE) :
                new ObjectParameter("IDPROVEDORE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTARPRO", iD_PROParameter, nOMBRE_PROParameter, dESCRIPCION_PROParameter, pRECIO_PROParameter, iDTIPOS_PRODUCTOParameter, iDFAMILIAS_PRODUCTOParameter, iDPROVEDOREParameter);
        }
    
        public virtual int LISTA_USUARIOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LISTA_USUARIOS");
        }
    
        public virtual int LISTPRODUCTOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LISTPRODUCTOS");
        }
    }
}
